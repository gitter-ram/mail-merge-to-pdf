'''

Author : Gitter-ram (https://github.com/gitter-ram)
Date : 06/August/2023
Description : This is a small script to bulk mail maiil-merged pdfs printed from word. To use this with gmail, generate an application password for your gmail account using the link:

https://myaccount.google.com/apppasswords

To use it,
1. Convert the details of mail-merge from excel to csv.
2. Use word to mail merge the desired documnet.
3. Print the documnet as pdf
4. Copy the CSV file and the PDF to the same folder as this script.
5. Run this script and answer all the questions that follow.


License:  GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007
You should have received a copy of the license in the LICENSE file of the repository https://github.com/gitter-ram/mail-merge-to-pdf
The text is available at: https://www.gnu.org/licenses/gpl-3.0.en.html

'''


import tkinter as tk
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email import encoders
import sys
import csv
import os.path

smtp_url = "smtp.gmail.com"
port = 587
temp_dir = "mail_temp"



# *************************************************************************************
# **                                                              |                  **
# ** Enter your Username and Password for G-Mail Here.           \|/                 **
# **                                                              V                  **
# *************************************************************************************

username = "someone.some@example.domain"
password = "16_digitpassword"

# ************************************************************************************




def send_message(sender, password, to, subj="", body="",att=""):
    msg = MIMEMultipart()
    msg['From'] = sender
    msg['To'] = to
    msg['Subject'] = subj
    msg.attach(MIMEText(body,'plain'))
    fl = open(att,'rb')
    payload = MIMEBase('application', 'octet-stream')
    payload.set_payload(fl.read())
    fl.close()
    encoders.encode_base64(payload)
    payload.add_header('Content-Disposition','attachment; filename={0}'.format(att.split("\\")[-1]))
    msg.attach(payload)
    
    s = smtplib.SMTP(smtp_url, port)
    s.starttls()
    s.login(sender, password)
    txt = msg.as_string()
    try:
        s.sendmail(sender, to, str(msg))
    except Exception as e:
        print("Mail not sent:", e)
    s.quit()


def parse_data(file:str, mail_col_name:str, temp_folder:str) -> dict:
    all_files = list(filter(lambda ele:".pdf" in ele, os.listdir(temp_folder)))
    ret = {}
    with open(file) as fin:
        count = 0
        mail_line = -1
        for row in csv.reader(fin,delimiter=','):
            if count == 0:
                heads = row
                mail_idx = row.index(mail_col_name)
                count += 1
                continue
            ret.update({row[mail_idx]:str(os.path.join(*[temp_folder, str(count) + ".pdf"]))})
            count += 1
    return ret


def pdf_split(comb_file:str, temp_dir:str):
    os.system("pdfseparate \"{0}\" \"{1}\\%d.pdf\"".format(comb_file, temp_dir))

def do_prompts():
    pdf = input("Enter the name of the combined file generated by word.:")
    csv_fl = input("Enter the name of the csv file.:")
    cols = []
    with open(csv_fl) as fin:
        for row in csv.reader(fin,delimiter=","):
            cols = row
            break
    for col in range(len(cols)):
        print(col, cols[col])
    col_idx = int(input("Enter the number of the column that has email addresses:"))
    col_name = cols[col_idx]
    subj = input("Enter a common subject line for the mails:")
    body = input("Enter a common body for the mails (aside from attachments):")

    # Now start the mailing.
    if os.access(temp_dir,os.F_OK):
        d = str(os.path.join(os.getcwd(), temp_dir))
        for f in os.listdir(d):
            os.remove(str(os.path.join(d, f)))
        os.rmdir(d)
    os.mkdir(temp_dir)
    pdf_split(pdf,temp_dir)
    f_assoc = parse_data(csv_fl, col_name, temp_dir)
    print(f_assoc)
    count = 0
    for recip in f_assoc:
        print("sending mail to ({0}/{1}):{2}".format(count + 1, len(f_assoc), recip))
        send_message(username, password, recip, subj=subj, body=body, att=f_assoc[recip])
        count += 1


if __name__ == "__main__":
    if len(sys.argv) <= 1:
        do_prompts()

